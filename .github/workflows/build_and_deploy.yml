# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: MPP-Team-Messaging-App CI/CD

env:
  repositoryName: techboost/dotnetcoreapp
  dockerFolderPath: ./Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}
  webAppUriPrefix: ${{vars.WEBAPP_URI_PREFIX}}
  LOAD_TEST_RESOURCE: ${{ vars.AZURE_LOADTESTING_RESOURCENAME }}   # set this to your Azure Load Test resource's name
  LOAD_TEST_RESOURCE_GROUP: ${{vars.AZURE_RG}} # set this to the resource group you've used for this training

on:
  push:
    branches: [ "main" ]
    paths: Application/**
  pull_request:
    branches: [ "main" ]
    paths: Application/**
  workflow_dispatch:
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Build
      run: dotnet build ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj --no-restore
    - name: Test
      run: dotnet test ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj --no-build --verbosity normal
    - uses: actions/github-script@v6
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Workflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
      
  dockerBuildPush:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      uses: docker/login-action@v1.9.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ vars.ACR_LOGIN_SERVER }}
        # Username used to log against the Docker registry
        username: ${{ secrets.ACR_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ACR_PASSWORD }}
        # Log out from the Docker registry at the end of a job
        logout: true
        
    - name: Docker Build
      run: docker build -t ${{vars.ACR_LOGIN_SERVER}}/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
      
    - name: Docker Push
      run: docker push ${{vars.ACR_LOGIN_SERVER}}/$repositoryName:$tag

  deploy-to-dev:
  
    runs-on: ubuntu-latest
    needs: dockerBuildPush
    environment:
      name: dev
      url: https://$($webAppUriPrefix)-dev.azurewebsites.net/
    
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.webAppUriPrefix }}-dev
          images: ${{vars.ACR_LOGIN_SERVER}}/${{ env.repositoryName}}:${{ env.tag }}

  loadTest:
    name: Load Test
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    steps:
      - name: Checkout GitHub Actions 
        uses: actions/checkout@v2
          
      - name: Login to Azure
        uses: azure/login@v1
        continue-on-error: false
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: 'Azure Load Testing'
        uses: azure/load-testing@v1
        with:
          loadTestConfigFile: 'LoadTestConfig.yaml'
          loadTestResource: ${{ env.LOAD_TEST_RESOURCE }}
          resourceGroup: ${{vars.AZURE_RG}}
          env: |
            [
              {
              "name": "webapp",
              "value": "${{ env.webAppUriPrefix }}-dev.azurewebsites.net"
              }
            ]  

      - uses: JasonEtco/create-an-issue@v2.9.1
        if: ${{ failure() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE/load_test_report.md
          
      - uses: actions/upload-artifact@v4
        with:
          name: loadTestResults
          path: ${{ github.workspace }}/loadTest

  # deploy-to-test:
  
  #   runs-on: ubuntu-latest
  #   needs: deploy-to-dev
  #   environment:
  #     name: test
  #     url: https://{your_prefix}-test.azurewebsites.net/
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: 'Login via Azure CLI'
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   - uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: '{your_prefix}-test'
  #       images: {your_registry_name}.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}

  # deploy-to-prod:
  
  #   runs-on: ubuntu-latest
  #   needs: deploy-to-test
  #   environment:
  #     name: prod
  #     url: https://{your_prefix}-prod.azurewebsites.net/
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: 'Login via Azure CLI'
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   - uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: '{your_prefix}-prod'
  #       images: {your_registry_name}.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}